# H2 database kullanýlacaksa aþaðýdaki satýrlarýn baþýndaki '#' iþaretini kaldýr ve
# MYSQL satýrlarýný yorum satýrý yap veya sil

#spring.h2.console.enabled=true
#spring.h2.console.path=/h2
#
#spring.datasource.url=jdbc:h2:file:~/warehouse-api
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.ddl-auto=update
#
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE



# MYSQL database kullanýlacaksa aþaðýdaki satýrlarýn baþýndaki '#' iþaretini kaldýr
# veritabanýnýn username ve þifre bilgilerini kendine göre doldur.
# son olarak H2 database satýrlarýný yorum satýrý yap veya sil


# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://localhost:3306/warehouse-api?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC

# Username and password
spring.datasource.username =
spring.datasource.password = 

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect